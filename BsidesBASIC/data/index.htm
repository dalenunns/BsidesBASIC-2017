<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
    html{font-family:Lucida,sans-serif;font-weight:400;font-size:14px;color:#57607c;background-color:#B9B9B9;}
    body{margin:8px}
    select{width:250px;height:33px;}
    option{width:250px;font-size:133%}
    </style>
</head>
<body>
<svg width="355" height="355" id="flux-capacitor">
    <ellipse ry="14" rx="14" cy="70"  cx="60"   id="led4" onclick="ledClick(this)" style="display:inline;fill:#434343;fill-opacity:1;stroke:#000000;stroke-width:1;stroke-opacity:1" />
    <ellipse ry="14" rx="14" cy="90"  cx="80"   id="led3" onclick="ledClick(this)" style="display:inline;fill:#434343;fill-opacity:1;stroke:#000000;stroke-width:1;stroke-opacity:1" />
    <ellipse ry="14" rx="14" cy="110" cx="100"  id="led2" onclick="ledClick(this)" style="display:inline;fill:#434343;fill-opacity:1;stroke:#000000;stroke-width:1;stroke-opacity:1" />
    <ellipse ry="14" rx="14" cy="130" cx="120"  id="led1" onclick="ledClick(this)" style="display:inline;fill:#434343;fill-opacity:1;stroke:#000000;stroke-width:1;stroke-opacity:1" />
    <ellipse ry="14" rx="14" cy="150" cx="140"  id="led0" onclick="ledClick(this)" style="display:inline;fill:#434343;fill-opacity:1;stroke:#000000;stroke-width:1;stroke-opacity:1" />

    <ellipse ry="14" rx="14" cy="70"  cx="-300" id="led14" onclick="ledClick(this)" style="display:inline;fill:#434343;fill-opacity:1;stroke:#000000;stroke-width:1;stroke-opacity:1" transform="scale(-1,1)" />
    <ellipse ry="14" rx="14" cy="90"  cx="-280" id="led13" onclick="ledClick(this)" style="display:inline;fill:#434343;fill-opacity:1;stroke:#000000;stroke-width:1;stroke-opacity:1" transform="scale(-1,1)" />
    <ellipse ry="14" rx="14" cy="110" cx="-260" id="led12" onclick="ledClick(this)" style="display:inline;fill:#434343;fill-opacity:1;stroke:#000000;stroke-width:1;stroke-opacity:1" transform="scale(-1,1)" />
    <ellipse ry="14" rx="14" cy="130" cx="-240" id="led11" onclick="ledClick(this)" style="display:inline;fill:#434343;fill-opacity:1;stroke:#000000;stroke-width:1;stroke-opacity:1" transform="scale(-1,1)" />
    <ellipse ry="14" rx="14" cy="150" cx="-220" id="led10" onclick="ledClick(this)" style="display:inline;fill:#434343;fill-opacity:1;stroke:#000000;stroke-width:1;stroke-opacity:1" transform="scale(-1,1)" />

    <ellipse ry="14" rx="14" cy="210" cx="177"  id="led9"  onclick="ledClick(this)" style="display:inline;fill:#434343;fill-opacity:1;stroke:#000000;stroke-width:1;stroke-opacity:1" />
    <ellipse ry="14" rx="14" cy="238" cx="177"  id="led8"  onclick="ledClick(this)" style="display:inline;fill:#434343;fill-opacity:1;stroke:#000000;stroke-width:1;stroke-opacity:1" />
    <ellipse ry="14" rx="14" cy="266" cx="177"  id="led7"  onclick="ledClick(this)" style="display:inline;fill:#434343;fill-opacity:1;stroke:#000000;stroke-width:1;stroke-opacity:1" />
    <ellipse ry="14" rx="14" cy="294" cx="177"  id="led6"  onclick="ledClick(this)" style="display:inline;fill:#434343;fill-opacity:1;stroke:#000000;stroke-width:1;stroke-opacity:1" />
    <ellipse ry="14" rx="14" cy="322" cx="178"  id="led5"  onclick="ledClick(this)" style="display:inline;fill:#434343;fill-opacity:1;stroke:#000000;stroke-width:1;stroke-opacity:1" />

    <g id="g10500" style="display:inline;fill:#000000;fill-opacity:0;stroke:#000000;stroke-width:78.74019623;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;" transform="matrix(0.00899999,0,0,0.00899999,-424.84116,-212.2434)">
        <path d="m 70866,33464 -7874,0 m 0,0 -5906,-5905 m 0,0 19685,0 m 0,0 -5905,5905" style="fill:#000000;fill-opacity:0;stroke:#000000;stroke-opacity:1" id="path10508" />
        <path d="m 61023,57086 0,-7874 m 0,0 -7874,-7874 m 0,0 0,15748 m 0,0  7874,0"    style="fill:#000000;fill-opacity:0;stroke:#000000;stroke-opacity:1" id="path10516" />
        <path d="m 72834,57086 0,-7874 m 0,0  7874,-7874 m 0,0 0,15748 m 0,0 -7874,0"    style="fill:#000000;fill-opacity:0;stroke:#000000;stroke-opacity:1" id="path10524" />
        <path d="m 49212.6,23622 a 1968.5,1968.5 0 0 0 -1968.5,1968.6 M 49212,23622 l 35433,0 m 1969.2,1968.6 A 1968.5,1968.5 0 0 0 84645.7,23622 m 1968.3,1968 0,35433 m -39369.9,0.6 a 1968.5,1968.5 0 0 0 1968.5,1968.5 m 35433.1,0 a 1968.5,1968.5 0 0 0 1968.5,-1968.5 m -39370.2,-0.6 0,-35433 m 37401,37402 -35433,0" style="fill:#000000;fill-opacity:0;stroke:#000000;stroke-opacity:1" id="path10540" />
    </g>
</svg>


<table>
    <tr>
        <td>&nbsp;</td><td>&nbsp;</td>
    </tr>
    <tr>
        <td>Presets:</td>
        <td><select id="presetColour" onchange="setColour(this)">
            <option value="#FFFFFF" style="background-color:#FFFFFF">White</option>
            <option value="#C0C0C0" style="background-color:#C0C0C0">Silver</option>
            <option value="#808080" style="background-color:#808080">Gray</option>
            <option value="#000000" style="background-color:#000000;color:#CCCCCC">Black</option>
            <option value="#FF0000" style="background-color:#FF0000">Red</option>
            <option value="#800000" style="background-color:#800000;color:#CCCCCC">Maroon</option>
            <option value="#FFFF00" style="background-color:#FFFF00" selected="selected">Yellow</option>
            <option value="#808000" style="background-color:#808000">Olive</option>
            <option value="#00FF00" style="background-color:#00FF00">Lime</option>
            <option value="#008000" style="background-color:#008000">Green</option>
            <option value="#00FFFF" style="background-color:#00FFFF">Aqua</option>
            <option value="#008080" style="background-color:#008080">Teal</option>
            <option value="#0000FF" style="background-color:#0000FF;color:#CCCCCC">Blue</option>
            <option value="#000080" style="background-color:#000080;color:#CCCCCC">Navy</option>
            <option value="#FF00FF" style="background-color:#FF00FF">Fuchsia</option>
            <option value="#800080" style="background-color:#800080;color:#CCCCCC">Purple</option>
            </select>
        </td>
    </tr>
    <tr>
        <td>&nbsp;</td><td>&nbsp;</td>
    </tr>
    <tr>
        <td>Colour picker:</td>
        <td><input id="colorPicker" type="color" style="min-height: 30px;min-width: 60px" value="#FFFF00" /></td>
    </tr>
    <tr>
        <td>Fill:</td>
        <td><input id="btnSetAll" type="button" value="Fill" onclick="setAllClick()"/> </td>
    </tr>
</table>

<div id="Hidden">
    <input type ="text" id="txtBASICCommand"/><br/>
    <input type="button" value="Send" id="btnSend" onclick="sendBASICCommand()" />
</div>


<script>
    var socket = new WebSocket("ws://192.168.4.1/ws");

    socket.onerror = function (error) {
        console.log('WebSocket Error: ' + error);
    }

    socket.onopen = function (event) {
        console.log('Connected to: ' + event.currentTarget.url);
    }

    socket.onmessage = function (event) {
        var message = event.data;
        if (event.data instanceof ArrayBuffer) {
            var bytearray = new Uint8Array(event.data);
            if (bytearray.length == 4) {
                if (bytearray[0] < 15) {
                    var ledId = getLedId(bytearray[0])
                    var colorHex = rgbToHex(bytearray[1], bytearray[2], bytearray[3])

                    var led = document.getElementById(ledId)
                    led.style.fill = colorHex
                } else if (bytearray[0] == 255) {
                    var colorHex = rgbToHex(bytearray[1], bytearray[2], bytearray[3])
                    for (i=0; i <15;i++) {
                        var ledId = getLedId(i)
                        var led = document.getElementById(ledId)
                        led.style.fill = colorHex
                    }
                }

                console.log('RX ArrayBuffer: '+buf2hex(bytearray))
            }

        }
        console.log('Received Msg: ' + message);
    }

    function buf2hex(buffer) {
        return Array.prototype.map.call(new Uint8Array(buffer), x => ('00' + x.toString(16)).slice(-2)).join('');
    }

    function componentToHex(c) {
        var hex = c.toString(16);
        return hex.length == 1 ? "0" + hex : hex;
    }

    function rgbToHex(r, g, b) {
        return "#" + componentToHex(r) + componentToHex(g) + componentToHex(b);
    }

    function getLedIndex(ledName) {
        switch (ledName) {
            case "led0":
                return 0x0;
            case "led1":
                return 0x1;
            case "led2":
                return 0x2;
            case "led3":
                return 0x3;
            case "led4":
                return 0x4;
            case "led5":
                return 0x5;
            case "led6":
                return 0x6;
            case "led7":
                return 0x7;
            case "led8":
                return 0x8;
            case "led9":
                return 0x9;
            case "led10":
                return 0xa;
            case "led11":
                return 0xb;
            case "led12":
                return 0xc;
            case "led13":
                return 0xd;
            case "led14":
                return 0xe;
        }
    }

    function getLedId(ledIndex) {
        switch (ledIndex) {
            case 0x0:
                return "led0";
            case 0x1:
                return "led1";
            case 0x2:
                return "led2";
            case 0x3:
                return "led3";
            case 0x4:
                return "led4";
            case 0x5:
                return "led5";
            case 0x6:
                return "led6";
            case 0x7:
                return "led7";
            case 0x8:
                return "led8";
            case 0x9:
                return "led9";
            case 0xa:
                return "led10";
            case 0xb:
                return "led11";
            case 0xc:
                return "led12";
            case 0xd:
                return "led13";
            case 0xe:
                return "led14";
        }
    }

    function setColour(selector) {
        var colorPicker = document.getElementById("colorPicker")
        colorPicker.value = selector.value;
    }

    function ledClick(led) {
        var colorPicker = document.getElementById("colorPicker")
        led.style.fill = colorPicker.value
        rgbVal = hex2rgb(colorPicker.value)
        //var msg = led.id + "|"+rgbVal[0]+","+rgbVal[1]+","+rgbVal[2]
        var data = new Uint8Array(4)
        data[0] = getLedIndex(led.id)
        data[1] = rgbVal[0]
        data[2] = rgbVal[1]
        data[3] = rgbVal[2]
        socket.binaryType = "arraybuffer";
        socket.send(data)

        console.log('TX ArrayBuffer: '+buf2hex(data))
    }

    function setAllClick() {
        var colorPicker = document.getElementById("colorPicker")
        rgbVal = hex2rgb(colorPicker.value)
        var data = new Uint8Array(4)
        data[0] = 0xFF
        data[1] = rgbVal[0]
        data[2] = rgbVal[1]
        data[3] = rgbVal[2]
        socket.binaryType = "arraybuffer";
        socket.send(data)

        console.log('TX ArrayBuffer: '+buf2hex(data))
    }

    function sendBASICCommand() {
        line = document.getElementById("txtBASICCommand").value
        sendBASICLine(line)
    }

    function sendBASICLine(line) {
        line = "BS:"+line
        socket.send(line)
        console.log('TX String: '+line)
    }

    function hex2rgb(hexStr) {
        var hex = parseInt(hexStr.substring(1), 16);
        var r = (hex & 0xff0000) >> 16;
        var g = (hex & 0x00ff00) >> 8;
        var b = (hex & 0x0000ff);
        return [r, g, b]
    }
</script>
</body>
